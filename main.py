"""
RadiografIA Pro - Versi√≥n Simplificada
Aplicaci√≥n principal para diagn√≥stico inteligente de radiograf√≠as
Autor: Sistema de IA M√©dica
Versi√≥n: 1.0 Simplificada
Compatibilidad: Windows 10, CPU optimizado
"""
import sys
import os
from pathlib import Path
# Agregar directorio actual al path para imports
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))
try:
# Importar aplicaci√≥n principal
from gui_simple import main
if __name__ == "__main__":
print("=" * 60)
print("üß† RadiografIA Pro - Versi√≥n Simplificada")
print("=" * 60)
print("Sistema Inteligente de Diagn√≥stico por Radiograf√≠as")
print("Optimizado para CPU - Windows 10")
print("Versi√≥n: 1.0 Simplificada")
print("-" * 60)
print("Funcionalidades:")
print("‚Ä¢ üß† ENTRENAMIENTO: Entrenar modelo con datos personalizados")
print("‚Ä¢ üîç INGRESO: Diagnosticar radiograf√≠as en tiempo real")
print("‚Ä¢ ‚ùå SALIR: Cerrar aplicaci√≥n")
print("-" * 60)
print("Iniciando aplicaci√≥n...")
print("=" * 60)
# Verificar dependencias b√°sicas y versi√≥n de TensorFlow
try:
import tensorflow as tf
import PyQt5
import cv2
import numpy as np
# Verificar versi√≥n de TensorFlow 2.10
tf_version = tf.__version__
print(f"‚úì TensorFlow versi√≥n: {tf_version}")
if not tf_version.startswith('2.10'):
print(f"‚ö†Ô∏è Advertencia: Se recomienda TensorFlow 2.10, detectado: {tf_version}")
print("‚úì Dependencias verificadas correctamente")
except ImportError as e:
print(f"‚ùå Error: Dependencia faltante - {e}")
print("Por favor, ejecute: pip install -r requirements_simple.txt")
sys.exit(1)
# Configurar TensorFlow 2.10 para CPU √∫nicamente
os.environ['CUDA_VISIBLE_DEVICES'] = '-1'  # Deshabilitar GPU
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'   # Reducir logs de TensorFlow
try:
tf.config.set_visible_devices([], 'GPU')  # Forzar uso de CPU
# Configuraci√≥n adicional para TensorFlow 2.10
tf.config.threading.set_inter_op_parallelism_threads(0)
tf.config.threading.set_intra_op_parallelism_threads(0)
print("‚úì TensorFlow 2.10 configurado para CPU")
except Exception as e:
print(f"‚ö†Ô∏è Configuraci√≥n TensorFlow: {e}")
print("üöÄ Lanzando interfaz gr√°fica...")
# Ejecutar aplicaci√≥n principal
main()
except ImportError as e:
print(f"‚ùå Error de importaci√≥n: {e}")
print("Aseg√∫rese de que todos los archivos est√©n presentes:")
print("- gui_simple.py")
print("- ai_engine.py") 
print("- training_module.py")
print("- requirements_simple.txt")
sys.exit(1)
except Exception as e:
print(f"‚ùå Error inesperado: {e}")
print("Contacte al soporte t√©cnico para asistencia")
sys.exit(1)
